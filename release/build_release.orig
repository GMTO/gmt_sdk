#!/usr/bin/env coffee

{spawnSync} = require 'child_process'
shell       = require 'shelljs'
msgpack     = require 'msgpack-lite'
fs          = require 'fs'

shell.config.silent = true

copy_file_set = (source_dir, dest_dir, pattern) =>
    if fs.existsSync source_dir
        shell
            .find(source_dir)
            .filter  (file)      -> file.match(pattern)
            .forEach (file_name) =>
                console.log "[INF] Installing #{file_name} in #{dest_dir}"
                if not shell.test("-d", dest_dir)
                    console.log "[INF] Creating dir: #{dest_dir}"
                    shell.mkdir "-p", dest_dir
                shell.cp file_name, dest_dir

<<<<<<< HEAD
global_scope  = process.env['GMT_GLOBAL']
local_scope   = process.env['GMT_LOCAL']
modules       = [
=======
global_scope = process.env['GMT_GLOBAL']
local_scope  = process.env['GMT_LOCAL']
modules      = [
>>>>>>> 2e0e3fcc93cbb09e7e7620528cb5eeba3c935c63
    "sys"
    "core_fwk"
    "ctrl_fwk"
    "dp_fwk"
    "io_fwk"
    "pers_fwk"
    "test_fwk"
    "log_sys"
    "alarm_sys"
    "tele_sys"
    "conf_sys"
    "sup_sys"
    "da_sys"
    "app_sys"
    "seq_sys"
    #"isample_dcs"
    #"hdk_dcs"
]

console.log "[INF] Processing model files"
modules.forEach (m) ->
    spawnSync "webpack", {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_#{m}/model"}

console.log "Building modules nodeJS implementation"
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_dev_fwk"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_core_fwk/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_ctrl_fwk/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_pers_fwk/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_test_fwk/src/coffee"}
spawnSync "make build_core", {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_app_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_log_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_tele_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_alarm_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_sup_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_conf_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_da_sys/src/coffee"}
spawnSync "make build_srv",  {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_app_sys/src/coffee"}
spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_seq_sys/src/coffee"}
#spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{local_scope}/modules/ocs_isample_dcs/src/coffee"}
#spawnSync "make build",      {shell: true, stdio: 'inherit', cwd: "#{local_scope}/modules/ocs_hdk_dcs/src/coffee"}

<<<<<<< HEAD

=======
>>>>>>> 2e0e3fcc93cbb09e7e7620528cb5eeba3c935c63
console.log "[INF] Installing binary files"
modules
    .filter  (m) => fs.existsSync "#{global_scope}/modules/ocs_#{m}/src/bin"
    .forEach (m) =>
        console.log "[INF] Installing #{global_scope}/modules/ocs_#{m}/src/bin files"
        spawnSync "cp -R ./bin/* #{global_scope}/bin" , {shell: true, stdio: 'inherit', cwd: "#{global_scope}/modules/ocs_#{m}/src"}

console.log "[INF] Installing configuration files"
modules.forEach (m) =>
    copy_file_set "#{global_scope}/modules/ocs_#{m}/src/etc/conf", "#{global_scope}/etc/conf/#{m}", /\_conf.coffee$/

console.log "[INF] Compiling configuration files"
modules.forEach (m) =>
    raw_files = shell.ls "#{global_scope}/etc/conf/#{m}/*.coffee"
    if raw_files.length > 0
        raw_files.forEach (raw_file_path) ->
            console.log "[INF] Compiling ", raw_file_path
            encoded_file_path = raw_file_path.replace ".coffee", ".cfg"
            raw_content       = require raw_file_path
            encoded_content   = msgpack.encode raw_content
            fs.writeFileSync encoded_file_path, encoded_content
<<<<<<< HEAD

=======
>>>>>>> 2e0e3fcc93cbb09e7e7620528cb5eeba3c935c63
